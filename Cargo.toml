[package]
name = "zero2prod"
version = "0.1.0"
authors = ["Diamondlord <vladimir.almazov@gmail.com>"]
edition = "2018"

[lib]
# We could use any path here, but we are following the community convention
# We could specify a library name using the `name` field. If unspecified,
# cargo will default to `package.name`, which is what we want.
path = "src/lib.rs"

# Notice the double square brackets: it's an array in TOML's syntax.
# We can only have one library in a project, but we can have multiple binaries!
# If you want to manage multiple libraries in the same repository
# have a look at the workspace feature - we'll cover it later on.
[[bin]]
path = "src/main.rs"
name = "zero2prod"

[dependencies]
actix-web = "3.2.0"
actix-rt = "1.1.1"
# We need the optional `derive` feature to use `serde`'s procedural macros:
# `#[derive(Serialize)]` and `#[derive(Deserialize)]`.
# The feature is not enabled by default to avoid pulling in
# unnecessary dependencies for projects that do not need it.
serde = { version = "1", features = ["derive"]}
serde-aux = "1.1.0"
sqlx = { version = "0.4.1", default-features = false, features = [ "runtime-actix-native-tls", "macros", "postgres", "uuid", "chrono", "migrate", "offline"] }
config = "0.10.1"
chrono = "0.4.19"
uuid = { version = "0.8.1", features = ["v4"] }
log = "0.4.11"
tracing = "0.1.21"
tracing-futures = "0.2.4"
tracing-subscriber = { version = "0.2.12", features = ["registry", "env-filter"] }
tracing-bunyan-formatter = "0.1.6"
tracing-opentelemetry = "0.9.0"
tracing-log = "0.1.1"
tracing-actix-web = "0.2.1"
opentelemetry = { version = "*", features = ["tokio"] }
opentelemetry-jaeger = { version = "*", features = ["collector_client", "tokio"] }
actix-web-opentelemetry = "0.8.0"
unicode-segmentation = "1.7.1"
validator = "0.12.0"

[dev-dependencies]
reqwest = "0.10.8"
tokio = "0.2.22"
lazy_static = "1.4.0"
claim = "0.4.0"
fake = "~2.3"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
